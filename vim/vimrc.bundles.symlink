let g:has_async = v:version >= 800 || has ('nvm')

call plug#begin('~/.vim/bundle')

" APPEARANCE {{{

" = ICONS => {{{
Plug 'ryanoasis/vim-devicons'
" }}}

" = LIGHTLINE => {{{
Plug 'itchyny/lightline.vim'
" }}}

" = THEMES => {{{

Plug 'arcticicestudio/nord-vim'
Plug 'cocopon/iceberg.vim'
Plug 'Badacadabra/vim-archery'
Plug 'whatyouhide/vim-gotham'
Plug 'mhartington/oceanic-next'
Plug 'morhetz/gruvbox'
Plug 'haishanh/night-owl.vim'

" }}}


" }}} "

" FORMATTING {{{

Plug 'prettier/vim-prettier', { 
      \'do': 'npm install' 
      \}

" }}}

" SYNTAX {{{

" = CSS => {{{
Plug 'styled-components/vim-styled-components'
" }}}

" = GRAPHQL => {{{
Plug 'jparise/vim-graphql'
" }}}

" = JAVASCRIPT => {{{
Plug 'pangloss/vim-javascript'
Plug 'maxmellon/vim-jsx-pretty'
" }}}

" = MDX => {{{
Plug 'jxnblk/vim-mdx-js'
" }}}

" = TYPESCRIPT => {{{
Plug 'leafgarland/typescript-vim'
Plug 'peitalin/vim-jsx-typescript'
" }}}

" }}}

" << RUST >> {{
Plug 'rust-lang/rust.vim'
let g:autofmt_autosave=1
" }}

Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'

"""""""""""""""""""""
" General Utilities "
"""""""""""""""""""""
Plug 'tpope/vim-eunuch'

""""""""
" HTML "
""""""""
Plug 'mattn/emmet-vim'


""""""""""""""""""""
" LANGUAGE CLIENTS "
""""""""""""""""""""
Plug 'autozimu/LanguageClient-neovim', { 'branch': 'next', 'do': 'bash install.sh' }

""""""""""""""
" MULTI-LANG "
""""""""""""""
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/tComment'

"=============
" REASONML   |
"=============
Plug 'reasonml-editor/vim-reason-plus'

""""""""""""""""""""
" Search Utilities "
""""""""""""""""""""
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'jremmen/vim-ripgrep'

"""""""""""""""""""
" Version Control "
"""""""""""""""""""
Plug 'tpope/vim-fugitive'

if g:has_async
  Plug 'w0rp/ale'
endif

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
  let g:deoplete#enable_at_startup = 1
endif

call plug#end()


